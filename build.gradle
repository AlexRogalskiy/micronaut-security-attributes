apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'

group "com.pulsarix.micronaut"
description "Micronaut Security Attributes"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

apply from: file('gradle/release.gradle')

dependencies {
    implementation "org.slf4j:slf4j-api:1.8-beta1"
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-core"
    implementation "io.micronaut:micronaut-security"

    implementation "ch.qos.logback:logback-classic:1.3.0-alpha4"
    implementation "ch.qos.logback:logback-core:1.3.0-alpha4"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testCompile "org.mockito:mockito-core:2.+"
    testCompile "org.mockito:mockito-junit-jupiter:2.27.0"
    testCompile "org.apache.commons:commons-lang3:3.9"
    testCompile "org.apache.httpcomponents:httpclient:4.5.9"

}


eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

mainClassName = '.'


java {
    withJavadocJar()
    withSourcesJar()
}


test {
    useJUnitPlatform()
}

